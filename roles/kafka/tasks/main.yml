
# Prepare =============================================|
- name: create kafka group 
  group: 
    name: kafka
    gid: "{{ kafka_gid }}"
    state: present
  tags: 
    - kafka
    - kafka_prepare
 
- name: create kafka user
  user: 
    name: kafka 
    group: kafka
    uid: "{{ kafka_uid }}"
    home: "/opt/kafka"
    shell: '/bin/bash'
    state: present
  tags: 
    - kafka
    - kafka_prepare

- name: fix the directory permissions one the mount points {data}
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: kafka
    group: kafka
  with_items:
    - "{{ kafka_dataDirs }}"
  tags: 
    - kafka
    - kafka_prepare

- name: fix the directory permissions one the mount points {log}
  file:
    path: "{{ kafka_logDir }}"
    state: directory
    mode: 0755
    owner: kafka
    group: kafka
  tags: 
    - kafka
    - kafka_prepare

- name: Create Kafka Yum Repository
  yum_repository:
    name: kafka
    description: "Repository for Kafka version {{ kafka_version }}"
    baseurl: "{{ kafka_repository }}/{{ kafka_version }}/revisions/{{ kafka_revision }}"
    gpgcheck: 0
    enabled: 1
  notify: yum-clean-all
  tags: 
    - kafka
    - kafka_prepare

- meta: flush_handlers

# Install =============================================|

- name: install Kafka
  yum:
    name: "kafka"
    state: latest
  notify: systemd-daemon-reload
  tags:
    - kafka
    - kafka_install

- meta: flush_handlers

# configure =============================================|

- name: nofile configuration
  pam_limits:
    domain: '@kafka'
    limit_type: '-'
    limit_item: nofile
    value: "{{ kafka_nofile }}"
  tags: 
    - kafka
    - kafka_config

- name: set kafka env file
  template: 
    src: "templates/{{ kafka_version }}/kafka.env.j2"
    dest: /opt/kafka/config/kafka.env
    owner: kafka
    group: kafka
    mode: 0644
  tags: 
    - kafka
    - kafka_config

- name: set the kafka profile file
  template: 
    src: "templates/kafka.profile.sh.j2"
    dest: /etc/profile.d/kafka.sh
    owner: root
    group: root
    mode: 0644
  tags: 
    - kafka
    - kafka_config

- name: set the kafka server properties file
  template: 
    src: "templates/{{ kafka_version }}/server.properties.j2"
    dest: /opt/kafka/config/server.properties
    owner: kafka
    group: kafka
    mode: 0644
  tags: 
    - kafka
    - kafka_config
    - kafka_server

- name: set the kafka logging/log4j properties file
  template: 
    src: "templates/{{ kafka_version }}/log4j.properties.j2"
    dest: /opt/kafka/config/log4j.properties
    owner: kafka
    group: kafka
    mode: 0644
  tags: 
    - kafka
    - kafka_config
# Security ================================|
- name: set the kafka sudo file
  template: 
    src: "templates/kafka.sudo.j2"
    dest: /etc/sudoers.d/10_kafka
    owner: kafka
    group: kafka
    mode: 0644
  when: kafka_security_enable == true
  tags: 
    - kafka
    - kafka-security
# Security KERBEROS ================================|
- name: set the kafka jaas file
  template: 
    src: "templates/{{ kafka.version }}/server_jaas.conf.j2"
    dest: /opt/kafka/config/kafka_server_jaas.conf
    owner: kafka
    group: kafka
    mode: 0644
  when: kafka_security_enable == true
  tags: 
    - kafka
    - kafka-security

- name: set kafka Admin keytab
  copy:
    src: "files/{{ kafka_security_kerberos_admin_principal }}.keytab"
    dest: /opt/kafka/config/kafkaAdmin.keytab
    owner: kafka
    group: kafka
    mode: 0600
  when: kafka_security_enable == true and kafka_security_kerberos_enable == true
  tags: 
    - kafka
    - kafka-security

- name: set kafka keytab
  copy:
    src: "files/{{ inventory_hostname }}.keytab"
    dest: /opt/kafka/config/kafka.keytab
    owner: kafka
    group: kafka
    mode: 0600
  when: kafka_security_enable == true and kafka_security_kerberos_enable == true
  tags: 
    - kafka
    - kafka-security

# Security SSL ================================|

- name: set kafka server truststore jks
  copy:
    src: "files/{{ inventory_hostname }}.truststore.jks"
    dest: /opt/kafka/config/kafka.server.truststore.jks
    owner: kafka
    group: kafka
    mode: 0600
  when: kafka_security_enable == true and kafka_security_ssl_enable == true
  tags: 
    - kafka
    - kafka-security

- name: set kafka server keystore jks
  copy:
    src: "files/{{ inventory_hostname }}.keystore.jks"
    dest: /opt/kafka/config/kafka.server.keystore.jks
    owner: kafka
    group: kafka
    mode: 0600
  when: kafka_security_enable == true and kafka_security_ssl_enable == true
  tags: 
    - kafka
    - kafka-security


# Service ===================================|

- service:
    name: kafka
    state: started